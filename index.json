{"project": "foapy", "project_url": "https://github.com/foarlab/foapy", "show_commit_url": "https://github.com/foarlab/foapy/commit/", "hash_length": 8, "revision_to_hash": {"51": "8f3e0e50f04b7e3db9036cbd5a686148d8cf0a22", "56": "cc40616eac733cc55825d516bb0647f417c1184c", "57": "f5ae92c28b19c84996915ebe7ddf4c5d94ac8260"}, "revision_to_date": {"51": 1712489725000, "56": 1712527383000, "57": 1712528812000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz"], "machine": ["MacBook-Pro-Igor.local"], "num_cpu": ["16"], "os": ["Darwin 22.5.0"], "ram": ["68719476736"], "python": ["3.11"], "Cython": [""], "build": [""], "packaging": [""], "branch": ["HEAD"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "machine": "MacBook-Pro-Igor.local", "num_cpu": "16", "os": "Darwin 22.5.0", "ram": "68719476736", "python": "3.11", "Cython": "", "build": "", "packaging": "", "branch": "HEAD"}], "benchmarks": {"bench_alphabet.AlphabetSuite.mem_alphabet": {"code": "class AlphabetSuite:\n    def mem_alphabet(self, length, case):\n        return alphabet(self.data)\n\n    def setup(self, length, case):\n        if case == \"Best\":\n            self.data = best_case(length)\n        elif case == \"DNA\":\n            self.data = dna_case(length)\n        elif case == \"Normal\":\n            self.data = normal_case(length)\n        elif case == \"Worst\":\n            self.data = worst_case(length)", "name": "bench_alphabet.AlphabetSuite.mem_alphabet", "param_names": ["length", "case"], "params": [["5", "50", "500", "5000", "50000", "500000", "5000000", "50000000"], ["'Best'", "'DNA'", "'Normal'", "'Worst'"]], "type": "memory", "unit": "bytes", "version": "915c78cb70ba9b143e7ccf20d7c6a01ec02e40ea9431be2461d0cf88a0934d63"}, "bench_alphabet.AlphabetSuite.peakmem_alphabet": {"code": "class AlphabetSuite:\n    def peakmem_alphabet(self, length, case):\n        return alphabet(self.data)\n\n    def setup(self, length, case):\n        if case == \"Best\":\n            self.data = best_case(length)\n        elif case == \"DNA\":\n            self.data = dna_case(length)\n        elif case == \"Normal\":\n            self.data = normal_case(length)\n        elif case == \"Worst\":\n            self.data = worst_case(length)", "name": "bench_alphabet.AlphabetSuite.peakmem_alphabet", "param_names": ["length", "case"], "params": [["5", "50", "500", "5000", "50000", "500000", "5000000", "50000000"], ["'Best'", "'DNA'", "'Normal'", "'Worst'"]], "type": "peakmemory", "unit": "bytes", "version": "9cfda70683e76c721bede7cbed73b4ae860b3ce8dd3f8da5ed8cbe7cded5a9a1"}, "bench_alphabet.AlphabetSuite.time_alphabet": {"code": "class AlphabetSuite:\n    def time_alphabet(self, length, case):\n        alphabet(self.data)\n\n    def setup(self, length, case):\n        if case == \"Best\":\n            self.data = best_case(length)\n        elif case == \"DNA\":\n            self.data = dna_case(length)\n        elif case == \"Normal\":\n            self.data = normal_case(length)\n        elif case == \"Worst\":\n            self.data = worst_case(length)", "min_run_count": 2, "name": "bench_alphabet.AlphabetSuite.time_alphabet", "number": 0, "param_names": ["length", "case"], "params": [["5", "50", "500", "5000", "50000", "500000", "5000000", "50000000"], ["'Best'", "'DNA'", "'Normal'", "'Worst'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "ed050558d228eed1bce20b4e4812e5e3e834157d3285a58ecbdc03263ad00ed3", "warmup_time": -1}}, "machines": {"MacBook-Pro-Igor.local": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "machine": "MacBook-Pro-Igor.local", "num_cpu": "16", "os": "Darwin 22.5.0", "ram": "68719476736", "version": 1}}, "tags": {}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}